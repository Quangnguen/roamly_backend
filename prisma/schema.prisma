generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid()) @map("_id")
  email          String   @unique
  username       String   @unique
  password       String
  name           String
  profilePic     String?
  bio            String?
  accountStatus  Boolean
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  deleteAt       DateTime?
  followers      Json     // [{ userId: String, followStatus: String }]
  following      Json     // [{ userId: String, followStatus: String }]
  role           Int
  refreshToken String? 
  private        Boolean
  @@map("users")
}

model Post {
  id         String   @id @default(uuid()) @map("_id")
  authorId   String   // ID của người tạo bài viết
  imageUrl   String[]
  caption    String?
  createdAt  DateTime @default(now())
  updatedAt      DateTime @updatedAt
  @@map("posts")
}

model Comment {
  id         String   @id @default(uuid()) @map("_id")
  postId     String   // ID bài viết
  authorId   String   // ID người viết bình luận
  content    String
  createdAt  DateTime @default(now())
  updatedAt      DateTime @updatedAt
  @@map("comments")
}

model Like {
  id         String   @id @default(uuid()) @map("_id")
  postId     String   // ID bài viết
  userId     String   // ID người like
  createdAt    DateTime @default(now())
  updatedAt      DateTime @updatedAt
  @@unique([userId, postId])
  @@map("likes")
}

model Message {
  id          String   @id @default(uuid()) @map("_id")
  senderId    String   // ID người gửi
  receiverId  String   // ID người nhận
  content     String
  createdAt   DateTime @default(now())
  updatedAt      DateTime @updatedAt
  @@map("messages")
}

model Notification {
  id           String   @id @default(uuid()) @map("_id")
  type         String   // LIKE, COMMENT, FOLLOW, MESSAGE,...
  message      String
  isRead       Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt      DateTime @updatedAt
  senderId     String?  // ID người gửi (nullable)
  recipientId  String   // ID người nhận
  postId       String?  // ID bài viết (nếu có)

  @@map("notifications")
}
model Trip {
  id            String   @id @default(uuid()) @map("_id")
  title         String
  userId        String
  description   String?
  startDate     DateTime
  endDate       DateTime
  placesVisited String[]
  sharedWith    String[]
  photos        Json       // Lưu danh sách ảnh nhúng trực tiếp [{ url, description, uploadedAt }]
  createdAt     DateTime   @default(now())

  @@map("trips")
}
